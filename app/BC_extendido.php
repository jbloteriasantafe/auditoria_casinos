<?php

function bce_inv(){//4157 digitos
  return '0.36787944117144232159552377016146086744581113103176783450783680169746149574489980335714727434591964374662732527684399520824697579279012900862665358949409878309219436737733811504863899112514561634498771997868447595793974730254989249545323936620796481051464752061229422308916492656660036507457728370553285373838810680478761195682989345449735073931859921661743300356993720820710227751802158499423378169071566767176233660823037612291562375720947000704050973342567757625252803037688616515709365379954274063707178784454194674909313069805601637021113897742282140173802328324652872913890046609866595124440976998514591642878037202025102245787321110595377768074371122062400051679652809754447802864860068385642004336846624843493869182620625189948219709924234252075104920934452851244860224513809864174210612195363683100782092248046530798065628541547860617931557059871702159996991882282653979278037471274386351562967145119439867026824526797168143897721413595796905425291035488597310782332694141185792356959493769860126575880312799846794846735134680226530244627705698244386387297002987588809534112675423789026164331040918607012257175816660345100790985888080842868407400134038381320004056775831406199265584918451278068708378191982028128450226420817302243546010954123388715759825373768259374426181082619747186504634174528732482726376615837639334212786293584446186772265003530351310971402261145920211374320967130559545051472046499276082391023347323952014953044680019080891010374128078475393591606116410798622192916656241572869710196363694437583635008455264959360732718331529311490245946159045476975931013890843997519331333484334772006962859487435285562973916515075740987283819153855057361331802861240591869093738759095604427125118632205309731798364031604200974914428425552273699179720997575637824556008073252479767214584985171037214044066748731577721203994697467609716825710177427020919766253195826039309222941027267245447113444753506162288776919476168669507108871169429946733905163416435673796116078107820809253093431606773084356495052822771438997985917559729540463420956722453695189573085795986431347933858124153556752918991575225337201969269548802764605740769716534298844317634637132038809023381895649023224384045499244743785889599062504999012578250806001478427321908128177119341080248688945214478806400852911455802185725902391089292349508345603855982644130500070854793620464998625635015780618044054178742481352000697384831659008195421051156414662717026560528480394609069960741833874469062262455331230700037467619999248219653592002929856233764683873299940478939335093218885790795581085321067422806667618532636142564958351017020251381818212682647784200978417022720749344997578522334202929503307295793627062668640301487420167358105611151191409331502641124535303863618128644201581600569290835606497265791982297628147806216269241895060169999666465236572552678203601154412019009128764743655153472540689771268225047343511042384504208440218850186094822134749559377154119867978694069013686169919612902600815279781113455933901163353903320630362399260509303375104873878251293231828675572915016358093500548832226756082127203727021837210636187660324483208600585108739722594204020217328392009307026665810267583809683197827101406698653216556519088768535016902045016460554256962749972018510619943924847163688272812559306511103570119037723846641491795026477663243449031106049335973693077515436939163750696368379087888411751876185457958923264449597506620950093377710765270529481875014879546186255109717939281903756373063446153274437886442609657719037982812285975803484703801785673444612054802161571568169575657187046048222706286282111412653463055339543002550629293877595286408850049796538874099760587618479720518814074499240909398314946763027075474520610236832992661223380366520479505353955872615427392077736320527234754017548817015867145698940189215191938803294578626672015335279266299243585873373825577535759941897769926990369298533428438327455945035298170899806570704318826520115670937104438664430963244585148061881675008988999705258227789938428118755961179698702179917035666200538819209369249833044991897298140164764236727812588372089702324430161929949871899066578674413483086915699232';
}

function bce(){//9999 digitos
  return '2.718281828459045235360287471352662497757247093699959574966967627724076630353547594571382178525166427427466391932003059921817413596629043572900334295260595630738132328627943490763233829880753195251019011573834187930702154089149934884167509244761460668082264800168477411853742345442437107539077744992069551702761838606261331384583000752044933826560297606737113200709328709127443747047230696977209310141692836819025515108657463772111252389784425056953696770785449969967946864454905987931636889230098793127736178215424999229576351482208269895193668033182528869398496465105820939239829488793320362509443117301238197068416140397019837679320683282376464804295311802328782509819455815301756717361332069811250996181881593041690351598888519345807273866738589422879228499892086805825749279610484198444363463244968487560233624827041978623209002160990235304369941849146314093431738143640546253152096183690888707016768396424378140592714563549061303107208510383750510115747704171898610687396965521267154688957035035402123407849819334321068170121005627880235193033224745015853904730419957777093503660416997329725088687696640355570716226844716256079882651787134195124665201030592123667719432527867539855894489697096409754591856956380236370162112047742722836489613422516445078182442352948636372141740238893441247963574370263755294448337998016125492278509257782562092622648326277933386566481627725164019105900491644998289315056604725802778631864155195653244258698294695930801915298721172556347546396447910145904090586298496791287406870504895858671747985466775757320568128845920541334053922000113786300945560688166740016984205580403363795376452030402432256613527836951177883863874439662532249850654995886234281899707733276171783928034946501434558897071942586398772754710962953741521115136835062752602326484728703920764310059584116612054529703023647254929666938115137322753645098889031360205724817658511806303644281231496550704751025446501172721155519486685080036853228183152196003735625279449515828418829478761085263981395599006737648292244375287184624578036192981971399147564488262603903381441823262515097482798777996437308997038886778227138360577297882412561190717663946507063304527954661855096666185664709711344474016070462621568071748187784437143698821855967095910259686200235371858874856965220005031173439207321139080329363447972735595527734907178379342163701205005451326383544000186323991490705479778056697853358048966906295119432473099587655236812859041383241160722602998330535370876138939639177957454016137223618789365260538155841587186925538606164779834025435128439612946035291332594279490433729908573158029095863138268329147711639633709240031689458636060645845925126994655724839186564209752685082307544254599376917041977780085362730941710163434907696423722294352366125572508814779223151974778060569672538017180776360346245927877846585065605078084421152969752189087401966090665180351650179250461950136658543663271254963990854914420001457476081930221206602433009641270489439039717719518069908699860663658323227870937650226014929101151717763594460202324930028040186772391028809786660565118326004368850881715723866984224220102495055188169480322100251542649463981287367765892768816359831247788652014117411091360116499507662907794364600585194199856016264790761532103872755712699251827568798930276176114616254935649590379804583818232336861201624373656984670378585330527583333793990752166069238053369887956513728559388349989470741618155012539706464817194670834819721448889879067650379590366967249499254527903372963616265897603949857674139735944102374432970935547798262961459144293645142861715858733974679189757121195618738578364475844842355558105002561149239151889309946342841393608038309166281881150371528496705974162562823609216807515017772538740256425347087908913729172282861151591568372524163077225440633787593105982676094420326192428531701878177296023541306067213604600038966109364709514141718577701418060644363681546444005331608778314317444081194942297559931401188868331483280270655383300469329011574414756313999722170380461709289457909627166226074071874997535921275608441473782330327033016823719364800217328573493594756433412994302485023573221459784328264142168487872167336701061509424345698440187331281010794512722373788612605816566805371439612788873252737389039289050686532413806279602593038772769778379286840932536588073398845721874602100531148335132385004782716937621800490479559795929059165547050577751430817511269898518840871856402603530558373783242292418562564425502267215598027401261797192804713960068916382866527700975276706977703643926022437284184088325184877047263844037953016690546593746161932384036389313136432713768884102681121989127522305625675625470172508634976536728860596675274086862740791285657699631378975303466061666980421826772456053066077389962421834085988207186468262321508028828635974683965435885668550377313129658797581050121491620765676995065971534476347032085321560367482860837865680307306265763346977429563464371670939719306087696349532884683361303882943104080029687386911706666614680001512114344225602387447432525076938707777519329994213727721125884360871583483562696166198057252661220679754062106208064988291845439530152998209250300549825704339055357016865312052649561485724925738620691740369521353373253166634546658859728665945113644137033139367211856955395210845840724432383558606310680696492485123263269951460359603729725319836842336390463213671011619282171115028280160448805880238203198149309636959673583274202498824568494127386056649135252670604623445054922758115170931492187959271800194096886698683703730220047531433818109270803001720593553052070070607223399946399057131158709963577735902719628506114651483752620956534671329002599439766311454590268589897911583709341937044115512192011716488056694593813118384376562062784631049034629395002945834116482411496975832601180073169943739350696629571241027323913874175492307186245454322203955273529524024590380574450289224688628533654221381572213116328811205214648980518009202471939171055539011394331668151582884368760696110250517100739276238555338627255353883096067164466237092264680967125406186950214317621166814009759528149390722260111268115310838731761732323526360583817315103459573653822353499293582283685100781088463434998351840445170427018938199424341009057537625776757111809008816418331920196262341628816652137471732547772778348877436651882875215668571950637193656539038944936642176400312152787022236646363575550356557694888654950027085392361710550213114741374410613444554419210133617299628569489919336918472947858072915608851039678195942983318648075608367955149663644896559294818785178403877332624705194505041984774201418394773120281588684570729054405751060128525805659470304683634459265255213700806875200959345360731622611872817392807462309468536782310609792159936001994623799343421068781349734695924646975250624695861690917857397659519939299399556754271465491045686070209901260681870498417807917392407194599632306025470790177452751318680998228473086076653686685551646770291133682756310722334672611370549079536583453863719623585631261838715677411873852772292259474337378569553845624680101390572787101651296663676445187246565373040244368414081448873295784734849000301947788802046032466084287535184836495919508288832320652212810419044804724794929134228495197002260131043006241071797150279343326340799596053144605323048852897291765987601666781193793237245385720960758227717848336161358261289622611812945592746276713779448758675365754486140761193112595851265575973457301533364263076798544338576171533346232527057200530398828949903425956623297578248873502925916682589445689465599265845476269452878051650172067478541788798227680653665064191097343452887833862172615626958265447820567298775642632532159429441803994321700009054265076309558846589517170914760743713689331946909098190450129030709956622662030318264936573369841955577696378762491885286568660760056602560544571133728684020557441603083705231224258722343885412317948138855007568938112493538631863528708379984569261998179452336408742959118074745341955142035172618420084550917084568236820089773945584267921427347756087964427920270831215015640634134161716644806981548376449157390012121704154787259199894382536495051477137939914720521952907939613762110723849429061635760459623125350606853765142311534966568371511660422079639446662116325515772907097847315627827759878813649195125748332879377157145909106484164267830994972367442017586226940215940792448054125536043131799269673915754241929660731239376354213923061787675395871143610408940996608947141834069836299367536262154524729846421375289107988438130609555262272083751862983706678722443019579379378607210725427728907173285487437435578196651171661833088112912024520404868220007234403502544820283425418788465360259150644527165770004452109773558589762265548494162171498953238342160011406295071849042778925855274303522139683567901807640604213830730877446017084268827226117718084266433365178000217190344923426426629226145600433738386833555534345300426481847398921562708609565062934040526494324426144566592129122564889356965500915430642613425266847259491431423939884543248632746184284665598533231221046625989014171210344608427161661900125719587079321756969854401339762209674945418540711844643394699016269835160784892451405894094639526780735457970030705116368251948770118976400282764841416058720618418529718915401968825328930914966534575357142731848201638464483249903788606900807270932767312758196656394114896171683298045513972950668760474091542042842999354102582911350224169076943166857424252250902693903481485645130306992519959043638402842926741257342244776558417788617173726546208549829449894678735092958165263207225899236876845701782303809656788311228930580914057261086588484587310165815116753332767488701482916741970151255978257270740643180860142814902414678047232759768426963393577354293018673943971638861176420900406866339885684168100387238921448317607011668450388721236436704331409115573328018297798873659091665961240202177855885487617616198937079438005666336488436508914480557103976521469602766258359905198704230017946553679';
}

function bcscale_string(string $n){
  return strlen(explode('.',$n)[1] ?? '');
}

function bcadd_precise(string $n1,string $n2){
  return bcadd($n1,$n2,max(bcscale_string($n1),bcscale_string($n2)));
}
function bcsub_precise(string $n1,string $n2){
  return bcsub($n1,$n2,max(bcscale_string($n1),bcscale_string($n2)));
}
function bcmul_precise(string $n1,string $n2){
  return bcmul($n1,$n2,bcscale_string($n1)+bcscale_string($n2));
}

function bcsign(string $n){
  $n = bcadd($n,'0',bcscale_string($n));//Limpia "-0"
  
  $partes = explode('.',$n);
  $entero  = empty($partes[0])? '0' : $partes[0];
  $decimal = empty($partes[1])? '0' : $partes[1];
  $s_entero  = bccomp($entero,'0',0);
  $s_decimal = bccomp($decimal,'0',0);
  
  if($s_entero == 1) return 1;
  if($s_entero == -1) return -1;
  if($entero[0] == '-'){//$s_entero == 0, vino -0.algo
    return -1;
  }
  //vino 0.algo
  return $s_decimal;//siempre es 0 o 1
}

function bcceil(string $n){
  $s = bcsign($n);
  if($s == 0) return '0';
  
  $entero = explode('.',$n)[0];
  if($s == -1){
    return $entero;
  }
  
  return bcadd($entero,'1',0);
}

function bcfloor(string $n){
  $s = bcsign($n);
  if($s == 0) return '0';
  
  $entero = explode('.',$n)[0];
  if($s == 1){
    return $entero;
  }
  
  return bcsub($entero,'1',0);
}

function bcround(string $n,$modo = null){//https://stackoverflow.com/questions/77030709/implementing-bankers-rounding-for-integer-division
  if($modo == 'CEIL')  return bcceil($n);
  if($modo == 'FLOOR') return bcfloor($n);
  
  $parts = explode('.',$n);
  if(count($parts) == 0 || count($parts) == 1) return $n;//sin parte decimal
  
  $n_signo = bcsign($n);
  if($n_signo == 0) return '0';
  
  $entero = empty($parts[0])? '0' : $parts[0];
  $decimal = '0.'.(empty($parts[1])? '0' : $parts[1]);
  $decimal_ubicacion = bccomp($decimal,'0.5',bcscale_string($decimal));
  
  if($n_signo == 1){//positivo
    if($decimal_ubicacion ==  1) return bcadd($entero,'1',0);//redondeo para arriba
    if($decimal_ubicacion == -1) return $entero;//para abajo
  }
  if($n_signo == -1){//negativo
    if($decimal_ubicacion ==  1) return bcsub($entero,'1',0);//redondeo para abajo
    if($decimal_ubicacion == -1) return $entero;//rdeondeo para arriba
  }
  
  //es .5
  //Redondeo de banquero
  $es_par = bcmod($entero,'2') == '0';
  if($es_par) return $entero;
  //Impar, voy al proximo par
  return bcadd($entero,$n_signo >= 0? '1' : '-1',0);
}

function bcround_ndigits(string $n,int $digits,$modo = NULL){//@SPEED: just move dot
  $pow10 = bcpowi('10',$digits,0);
  $n10   = bcmul($n,$pow10,bcscale_string($n));
  return bcdiv(bcround($n10,$modo),$pow10,$digits);
}

function bcpowi(string $base,string $exponent_bigint,int $scale){
  $ret = '1';
  while(bccomp($exponent_bigint,'0',0) > 0){
    $ret = bcmul($ret,$base,$scale);
    $exponent_bigint = bcsub($exponent_bigint,'1',0);
  }
  return $ret;
}

function bcepow(string $val,int $scale){//bcpow(bce(),$val,$scale) tira resultados mal >:(
  static $inv_factorial = null;
  static $ITERATIONS = 100;
  static $scale_used = null;
  if($inv_factorial === null || $scale_used === null || $scale_used != $scale){
    $scale_used = $scale;
    $inv_factorial = array_fill('0',$ITERATIONS,null);
    $inv_factorial[0] = '1';
    $inv_factorial[1] = '1';
    for($i = 2;$i < $ITERATIONS;$i++){
      $inv_factorial[$i] = bcdiv($inv_factorial[$i-1],$i,$scale);
    }
  }
   
  $pow = $val;
  $retval = bcadd('1', $val, $scale);
  for($i = 0;$i < ($ITERATIONS-2);$i++) {
    $pow = bcmul($pow,$val,$scale);
    $inv_fact = $inv_factorial[$i+2];
    $retval = bcadd($retval,bcmul($pow, $inv_fact, $scale),$scale);
  }
  return $retval;
}

function bcln(string $y,int $outscale,int $scale = null){  
  //f(x) = e^$x - $y = 0
  if($scale === null){
    $scale = max(100,$outscale*5);
  }
    
  $e = function($x) use (&$scale){
    return bcepow($x,$scale);
  };
  $f = function($e_x) use ($y,&$scale){
    return bcsub($e_x,$y,$scale);
  };
  $sign = function($v) use (&$scale){
    return bccomp($v,'0',$scale);
  };
  
  //e^x >= 0 -> e^x > 0.00...(scale)..9 -> e^x > 9x10^-(scale+1)
  //9x10^-(scale+1) <= e^x -> ln(9) - ln(10)*(scale+1) <= x
  $ln_9  = '2.1972245773362193827904904738450514092949811156454989034693886672749885864372179337472315096274641775759400581319157314847360084518610396421056037415345548212063255383667627343587473976887219198074851406335918230422911838355013426941098803335511604444063405058937951213802130430112857362760726347465971555647339833095842636362980400602076472602444973054963964519821949049817929161069340176919301714968882380377141752949897341592261716588232043322423680028196510287838975377873596988604511463070659370690590502918427752989371865125588833113883156544620710337732204236939780879886126276510571472933765649976273645601268287821573786502912875020408903255123869947964233883171481070723517801950244467595473939375508709590271425964354035162484244702811620326544931177874499129838370485921593368469294138754474505310164064156667856111785706293746190265212916618368794993644460651530935066623646039298550515198264435702706780474965928679005092148491649869333732243762873053130859085535221010955590845867946646802347486387949159694037119096988118956707887682021205861524584456262414978612689068050555465371254296003363743094487956414375606889356043235631683808564015344248651147602872835775365232208203363744848137581781985974841630436647505788550546506814200567150139012480793092550448861692517690171957250616644954907777013600697664868098016798011616188713056424474077740407360909720155242848817739451882716873199845242347934160990190558542872630928088924617831637073423921674060970704181934525916483008071199024271090066448349694820066396297566490513866940989987460331267332198380791424564568976334862430125713998774807763802548967912958206954577194423970129884559397158333991283710253008300438310943933171385945321304714658747366005566184355321077406092401532316989340045202351359503600786958352655568987028526993672007511571432140099636303836874687658186949332091550131854734024223074116499295969586080841164792950771570192125218677982941224026048621652103652591728015200611898864233376089221226936906796404351886515610405215983635500540204878213847902871753388616237590809668574409311810887331846080494784572857926690829704713800833025021376016629723713700808828721446523476022279230751944566601995296707961492533115648070020441375492032098822452909580337313920815224581618542732142823800650989936233981507293559294736525665795089908910479471659448726691656734352445986748722264605403586163142915410830840601913286848511732336409328651588291698600653025922760820427734526052990800622071565555229945535313161961162727248027414493732405499558354850237386540161048560033661029119955309655406219338696181554113017403929623214034404323681946413618413746897440352278175778315375051413058713111323621758952081772658041815246008973904368466733782097475074369466164824759263211517725809377200678239221731172657720905459641639419370331112164182607431697372849045599371010858150769994527737427968860368075638730182279901941891473032475040842560937693999896432700819855289949864454272354997578956922401434877504533153075475924727298195638403704445541449756283499410593868363631250111881140992130267250359718355628079660358302762882679138797028691774967095146714344612297538396159265917571854147872507018080466420654369187266294454723994886425589858305664559904481881513603795357237836313178121001969693528518868661843581052410389818058286774403763755382788680252412000158902769568020287637068446850175824756687911680553572507111065597032773145605498297343221917230739928959646795663258820920653031548725667391967936843913549694688157151997988714877098118125048080167636761796482315061641852707454160770391093029421648960137238786981206230474347214338880032499910067797113575340953118713065352126808204877421744796824891321140190635846940108369853901798877202925009925293017416396443074402746640207976254280234275098278700122428241209809174569064169096988241943758337872972735503176113819636984990177328108706776256066839111711702472055588802883150441762287953426631298852937728222753675657651189654410118109662962233721558182531392571096633515219647744894040671885502295716412120371165178408696734977113068028319452636664569130767914143636785715406614418289490845203813145615519773282181963875446480129865959211302670502375044831270350978679012557982259944891387531512100976879201044631090067035236233529793433577343150499727611048066566031279230462548992263793519162127577866309559552191899664817372287337025516921312929053943670758167615334061314805800704622232331387541446964023833423023788520094771031492518806721051416241429834854619561871410856965963162961878540936372929415450496';
  $ln_10 = '2.3025850929940456840179914546843642076011014886287729760333279009675726096773524802359972050895982983419677840422862486334095254650828067566662873690987816894829072083255546808437998948262331985283935053089653777326288461633662222876982198867465436674744042432743651550489343149393914796194044002221051017141748003688084012647080685567743216228355220114804663715659121373450747856947683463616792101806445070648000277502684916746550586856935673420670581136429224554405758925724208241314695689016758940256776311356919292033376587141660230105703089634572075440370847469940168269282808481184289314848524948644871927809676271275775397027668605952496716674183485704422507197965004714951050492214776567636938662976979522110718264549734772662425709429322582798502585509785265383207606726317164309505995087807523710333101197857547331541421808427543863591778117054309827482385045648019095610299291824318237525357709750539565187697510374970888692180205189339507238539205144634197265287286965110862571492198849978748873771345686209167058498078280597511938544450099781311469159346662410718466923101075984383191912922307925037472986509290098803919417026544168163357275557031515961135648465461908970428197633658369837163289821744073660091621778505417792763677311450417821376601110107310423978325218948988175979217986663943195239368559164471182467532456309125287783309636042629821530408745609277607266413547875766162629265682987049579549139549180492090694385807900327630179415031178668620924085379498612649334793548717374516758095370882810674524401058924449764796860751202757241818749893959716431055188481952883307466993178146349300003212003277656541304726218839705967944579434683432183953044148448037013057536742621536755798147704580314136377932362915601281853364984669422614652064599420729171193706024449293580370077189810973625332245483669885055282859661928050984471751985036666808749704969822732202448233430971691111368135884186965493237149969419796878030088504089796185987565798948364452120436982164152929878117429733325886079159125109671875109292484750239305726654462762009230687915181358034777012955936462984123664970233551745861955647724618577173693684046765770478743197805738532718109338834963388130699455693993461010907456160333122479493604553618491233330637047517248712763791409243983318101647378233796922656376820717069358463945316169494117018419381194054164494661112747128197058177832938417422314099300229115023621921867233372683856882735333719251034129307056325444266114297653883018223840910261985828884335874559604530045483707890525784731662837019533922310475275649981192287427897137157132283196410034221242100821806795252766898581809561192083917607210809199234615169525990994737827806481280587927319938934534153201859697110214075422827962982370689417647406422257572124553925261793736524344405605953365915391603125244801493132345724538795243890368392364505078817313597112381453237015084134911223243909276817247496079557991513639828810582857405380006533716555530141963322419180876210182049194926514838926922937078986352706385027022697551249943004381827884731992196581431219760711108763412244664073779455588583919440809311024283085084746319069321981468643083555347651114650769097333395832575068277582831051803299481308483996817211366798801920377706868547950620358417219984374394106362343231481174552475640089192165491269082781506048171199070188629209822862716730477199015770285357910506284673372232400018795615022890843967414685656483176881389206840957969180335433913646786574590549488029854381988073595542704154087340145317392545367328193997645602559843243305615873500293280257230645327034811810847231164468047519194264144375548657693929296834286675851067319241918228522689913893119216944242303851706529337045121498383597940218271629133640253154959691311714663534422264568544683226289253198527399466669571860157929838504401537461528275128857545617541969976789089211724902376347878942402183376781397354658345556295079309046680515976409505248189475873099476612986320677356531111786061537481010815864277211113500176661091149696494183076946301388416026503178481192972380206808689623654396591512067607905008319523024347817883038778471028263055912430624394315691194617233215130478320894258513052642518211479848258424730967079501644395520063137114248500249765290151310380216416843468036623965040057852031727464634148889412770388318760666904172965971359908177369006347894595288976221997880798271398331815395541572978947016728750253235908278131635706663489567636634400113009800938783592130026295307123674302232399707337986684151718246888145657647721175116367797327505183074902665362';
  
  $min_x = bcsub($ln_9,bcmul($ln_10,$scale+1,$scale));
  $x;
  $max_x = '27';
  
  $e_min_x = $e($min_x);
  $e_x;
  $e_max_x = '532048240601.798616683747304341177441659255804283688808837731150535969409966953197164611553828831352151693637064072599447272272788684828844196909131943172964617211590451251606340261813200391872728258573188228469394714647969081103842230553006046256565945';
  
  $f_min_x = $f($e_min_x);
  $f_x;
  $f_max_x = $f($e_max_x);
  
  $s_min_x = $sign($f_min_x);
  $s_x;
  $s_max_x = $sign($f_max_x);
  
  assert($s_min_x == -1);//Failed bound check
  assert($s_max_x ==  1);//Failed bound check
  
  for($it = 0;$it < $scale;$it++){//NEWTON RAPHSON me da sobreshoot para cualquier lado :/ 
    $x = $e_x = $f_x = $s_x = null;
    $x = bcmul(bcadd($min_x,$max_x,$scale),'0.5',$scale);
    $e_x = $e($x);
    $f_x = $f($e_x);
    $s_x = $sign($f_x);
    
    if($s_x  == 0){
      break;
    }
    else if($s_x == -1){
      $min_x   = $x;
      $e_min_x = $e_x;
      $f_min_x = $f_x;
      $s_min_x = $s_x;
    }
    else if($s_x == 1){
      $max_x   = $x;
      $e_max_x = $e_x;
      $f_max_x = $f_x;
      $s_max_x = $s_x;
   
    }
  }
  return bcadd($x,0,$outscale);
}

function bcmin($a,$b,$scale){
  $a_smaller = bccomp($a,$b,$scale) <= 0; 
  return [$b,$a][$a_smaller+0];
}

function bcmax($a,$b,$scale){
  $a_smaller = bccomp($a,$b,$scale) <= 0; 
  return [$a,$b][$a_smaller+0];
}

function bcclamp($x,$min,$max,$scale){
  assert(bccomp($max,$min,$scale) >= 0);
  return bcmin(bcmax($x,$min,$scale),$max,$scale);
}

if(defined('BC_EXTENDIDO_TEST')){
foreach([
    ['19.501','CEIL','19.51'],
    ['19.501','FLOOR','19.50'],
    ['19.501',null,'19.50'],
    ['19.005','CEIL','19.01'],
    ['19.005','FLOOR','19.00'],
    ['19.005',null,'19.00'],
    ['19.015','CEIL','19.02'],
    ['19.015','FLOOR','19.01'],
    ['19.015',null,'19.02'],
    ['19.025','CEIL','19.03'],
    ['19.025','FLOOR','19.02'],
    ['19.025',null,'19.02'],
    ['-19.015','CEIL','-19.01'],
    ['-19.015','FLOOR','-19.02'],
    ['-19.015',null,'-19.02'],
    ['-19.025','CEIL','-19.02'],
    ['-19.025','FLOOR','-19.03'],
    ['-19.025',null,'-19.02'],
    ['0','CEIL','0'],
    ['0','FLOOR','0'],
    ['0',null,'0'],
    ['-0','CEIL','0'],
    ['-0','FLOOR','0'],
    ['-0',null,'0'],
    ['0.005','CEIL','0.01'],
    ['0.005','FLOOR','0.00'],
    ['0.005',null,'0.00'],
    ['-0.005','CEIL','-0.00'],
    ['-0.005','FLOOR','-0.01'],
    ['-0.005',null,'-0.00'],
    ['0.015','CEIL','0.02'],
    ['0.015','FLOOR','0.01'],
    ['0.015',null,'0.02'],
    ['-0.015','CEIL','-0.01'],
    ['-0.015','FLOOR','-0.02'],
    ['-0.015',null,'-0.02'],
    ['0.025','CEIL','0.03'],
    ['0.025','FLOOR','0.02'],
    ['0.025',null,'0.02'],
    ['-0.025','CEIL','-0.02'],
    ['-0.025','FLOOR','-0.03'],
    ['-0.025',null,'-0.02'],
  ] as $test){
  $r = bcround_ndigits($test[0],2,$test[1]);
  $s = $test[0].' '.($test[1] ?? 'BANCO').' = '.$r.' == '.$test[2];
  dump($s);
  if(bccomp($r,$test[2],10) != 0){
    throw new \Exception($s);
  }
}

foreach([
  ['2.51','0.5','2.5',2,'2.5'],
  ['2.5','0.5','2.5',2,'2.5'],
  ['2.4','0.5','2.5',2,'2.4'],
  ['0.51','0.5','2.5',2,'0.51'],
  ['0.5','0.5','2.5',2,'0.5'],
  ['0.49','0.5','2.5',2,'0.5'],
  
  ['2.51','-0.5','2.5',2,'2.5'],
  ['2.5','-0.5','2.5',2,'2.5'],
  ['2.4','-0.5','2.5',2,'2.4'],
  ['0','-0.5','2.5',2,'0'],
  ['-0.51','-0.5','2.5',2,'-0.5'],
  ['-0.5','-0.5','2.5',2,'-0.5'],
  ['-0.49','-0.5','2.5',2,'-0.49'],
  
  ['2.51','2.5','2.5',2,'2.5'],
  ['2.5','2.5','2.5',2,'2.5'],
  ['2.4','2.5','2.5',2,'2.5'],
  ['0','2.5','2.5',2,'2.5'],
  ['-0.51','2.5','2.5',2,'2.5'],
  ['-0.5','2.5','2.5',2,'2.5'],
  ['-0.49','2.5','2.5',2,'2.5'],
  
  ['-2.51','-2.5','-0.5',2,'-2.5'],
  ['-2.5','-2.5','-0.5',2,'-2.5'],
  ['-2.4','-2.5','-0.5',2,'-2.4'],
  ['-0.51','-2.5','-0.5',2,'-0.51'],
  ['-0.5','-2.5','-0.5',2,'-0.5'],
  ['-0.49','-2.5','-0.5',2,'-0.5'],
] as $test){
  $r = bcclamp($test[0],$test[1],$test[2],$test[3]);
  $s = "bcclamp({$test[0]},{$test[1]},{$test[2]},{$test[3]}) = {$r} == {$test[4]}";
  dump($s);
  if(bccomp($r,$test[4],10) != 0){
    throw new \Exception($s);
  }
}


}
